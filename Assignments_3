Step 1. Import the necessary libraries
import pandas as pd
import numpy as np
Step 2. Import the dataset from this address.
Step 3. Assign it to a variable called iris
iris = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/iris/iris.data', header = None)
iris
0	1	2	3	4
0	5.1	3.5	1.4	0.2	Iris-setosa
1	4.9	3.0	1.4	0.2	Iris-setosa
2	4.7	3.2	1.3	0.2	Iris-setosa
3	4.6	3.1	1.5	0.2	Iris-setosa
4	5.0	3.6	1.4	0.2	Iris-setosa
...	...	...	...	...	...
145	6.7	3.0	5.2	2.3	Iris-virginica
146	6.3	2.5	5.0	1.9	Iris-virginica
147	6.5	3.0	5.2	2.0	Iris-virginica
148	6.2	3.4	5.4	2.3	Iris-virginica
149	5.9	3.0	5.1	1.8	Iris-virginica

Step 4. Create columns for the dataset
# 1. sepal_length (in cm)
# 2. sepal_width (in cm)
# 3. petal_length (in cm)
# 4. petal_width (in cm)
# 5. class
iris.columns = ["sepal_length (in cm)", 'sepal_width (in cm)', 'petal_length (in cm)'
                , 'petal_width (in cm)', 'class']
iris
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)	class
0	5.1	3.5	1.4	0.2	Iris-setosa
1	4.9	3.0	1.4	0.2	Iris-setosa
2	4.7	3.2	1.3	0.2	Iris-setosa
3	4.6	3.1	1.5	0.2	Iris-setosa
4	5.0	3.6	1.4	0.2	Iris-setosa
...	...	...	...	...	...
145	6.7	3.0	5.2	2.3	Iris-virginica
146	6.3	2.5	5.0	1.9	Iris-virginica
147	6.5	3.0	5.2	2.0	Iris-virginica
148	6.2	3.4	5.4	2.3	Iris-virginica
149	5.9	3.0	5.1	1.8	Iris-virginica

Step 5. Is there any missing value in the dataframe?
iris.isna().sum()
sepal_length (in cm)    0
sepal_width (in cm)     0
petal_length (in cm)    0
petal_width (in cm)     0
class                   0
dtype: int64
Step 6. Lets set the values of the rows 10 to 29 of the column 'petal_length' to NaN
#iris['petal_length (in cm)'].iloc[10:30].apply(lambda x: np.nan)
iris['petal_length (in cm)'][10:30] = np.nan
/opt/conda/lib/python3.7/site-packages/ipykernel_launcher.py:2: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  
iris.iloc[10:30]
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)	class
10	5.4	3.7	NaN	0.2	Iris-setosa
11	4.8	3.4	NaN	0.2	Iris-setosa
12	4.8	3.0	NaN	0.1	Iris-setosa
13	4.3	3.0	NaN	0.1	Iris-setosa
14	5.8	4.0	NaN	0.2	Iris-setosa
15	5.7	4.4	NaN	0.4	Iris-setosa
16	5.4	3.9	NaN	0.4	Iris-setosa
17	5.1	3.5	NaN	0.3	Iris-setosa
18	5.7	3.8	NaN	0.3	Iris-setosa
19	5.1	3.8	NaN	0.3	Iris-setosa
20	5.4	3.4	NaN	0.2	Iris-setosa
21	5.1	3.7	NaN	0.4	Iris-setosa
22	4.6	3.6	NaN	0.2	Iris-setosa
23	5.1	3.3	NaN	0.5	Iris-setosa
24	4.8	3.4	NaN	0.2	Iris-setosa
25	5.0	3.0	NaN	0.2	Iris-setosa
26	5.0	3.4	NaN	0.4	Iris-setosa
27	5.2	3.5	NaN	0.2	Iris-setosa
28	5.2	3.4	NaN	0.2	Iris-setosa
29	4.7	3.2	NaN	0.2	Iris-setosa
Step 7. Good, now lets substitute the NaN values to 1.0
iris = iris.replace(np.nan, 1.0)
#inplace#
iris['petal_length (in cm)'].fillna(1, inplace = True)
iris.iloc[10:30]
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)	class
10	5.4	3.7	1.0	0.2	Iris-setosa
11	4.8	3.4	1.0	0.2	Iris-setosa
12	4.8	3.0	1.0	0.1	Iris-setosa
13	4.3	3.0	1.0	0.1	Iris-setosa
14	5.8	4.0	1.0	0.2	Iris-setosa
15	5.7	4.4	1.0	0.4	Iris-setosa
16	5.4	3.9	1.0	0.4	Iris-setosa
17	5.1	3.5	1.0	0.3	Iris-setosa
18	5.7	3.8	1.0	0.3	Iris-setosa
19	5.1	3.8	1.0	0.3	Iris-setosa
20	5.4	3.4	1.0	0.2	Iris-setosa
21	5.1	3.7	1.0	0.4	Iris-setosa
22	4.6	3.6	1.0	0.2	Iris-setosa
23	5.1	3.3	1.0	0.5	Iris-setosa
24	4.8	3.4	1.0	0.2	Iris-setosa
25	5.0	3.0	1.0	0.2	Iris-setosa
26	5.0	3.4	1.0	0.4	Iris-setosa
27	5.2	3.5	1.0	0.2	Iris-setosa
28	5.2	3.4	1.0	0.2	Iris-setosa
29	4.7	3.2	1.0	0.2	Iris-setosa
Step 8. Now let's delete the column class
iris = iris.drop(columns = 'class')
del iris['class']
KeyError                                  Traceback (most recent call last)

iris
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)
0	5.1	3.5	1.4	0.2
1	4.9	3.0	1.4	0.2
2	4.7	3.2	1.3	0.2
3	4.6	3.1	1.5	0.2
4	5.0	3.6	1.4	0.2
...	...	...	...	...
145	6.7	3.0	5.2	2.3
146	6.3	2.5	5.0	1.9
147	6.5	3.0	5.2	2.0
148	6.2	3.4	5.4	2.3
149	5.9	3.0	5.1	1.8

Step 9. Set the first 3 rows as NaN
iris.iloc[:3] = np.nan
iris
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)
0	NaN	NaN	NaN	NaN
1	NaN	NaN	NaN	NaN
2	NaN	NaN	NaN	NaN
3	4.6	3.1	1.5	0.2
4	5.0	3.6	1.4	0.2
...	...	...	...	...
145	6.7	3.0	5.2	2.3
146	6.3	2.5	5.0	1.9
147	6.5	3.0	5.2	2.0
148	6.2	3.4	5.4	2.3
149	5.9	3.0	5.1	1.8

Step 10. Delete the rows that have NaN
iris = iris.dropna()
iris
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)
3	4.6	3.1	1.5	0.2
4	5.0	3.6	1.4	0.2
5	5.4	3.9	1.7	0.4
6	4.6	3.4	1.4	0.3
7	5.0	3.4	1.5	0.2
...	...	...	...	...
145	6.7	3.0	5.2	2.3
146	6.3	2.5	5.0	1.9
147	6.5	3.0	5.2	2.0
148	6.2	3.4	5.4	2.3
149	5.9	3.0	5.1	1.8

Step 11. Reset the index so it begins with 0 again
#idk
iris.reset_index(drop = True, inplace = True)
iris
sepal_length (in cm)	sepal_width (in cm)	petal_length (in cm)	petal_width (in cm)
0	4.6	3.1	1.5	0.2
1	5.0	3.6	1.4	0.2
2	5.4	3.9	1.7	0.4
3	4.6	3.4	1.4	0.3
4	5.0	3.4	1.5	0.2
...	...	...	...	...
142	6.7	3.0	5.2	2.3
143	6.3	2.5	5.0	1.9
144	6.5	3.0	5.2	2.0
145	6.2	3.4	5.4	2.3
146	5.9	3.0	5.1	1.8

BONUS: Create your own question and answer it.
